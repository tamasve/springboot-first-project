spring.thymeleaf.cache=false
spring.web.locale-resolver=fixed
# determine the 'messages...properties' file
spring.web.locale=de

# H2 DB settings --
spring.datasource.url=jdbc:h2:mem:testdb
# this value should be written at 1st time into 'JDBC URL' field manually!

# we want to reach h2 database from console - this is only for test of course...
spring.h2.console.enabled=true
# browser link mapping for DB
spring.h2.console.path=/db
# platform setting is necessary for JDBC
spring.sql.init.platform=h2

# this setting is necessary to execute data.sql on the void DB
spring.jpa.defer-datasource-initialization=true

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# so that @Query() manually written SQL query can work at JPQL (but this is not the real solution)
spring.jackson.serialization.fail-on-empty-beans=false

# to show all Hibernate queries
spring.jpa.show-sql=true

## heroku DB settings - from own DB setting values --
#spring.datasource.url=jdbc:postgresql://ec2-34-248-169-69.eu-west-1.compute.amazonaws.com:5432/d4apuu4a5072vb
## from heroku: postgres://zecqyzaxspgrnr:854a73d7191690a8b27461a0be85eb0add0ffef8e36b5d5db175813f755b6592@ec2-34-248-169-69.eu-west-1.compute.amazonaws.com:5432/d4apuu4a5072vb
## format: = jdbc.dbtype://link:port/dbname?specialsettings  - the latter would be acc. to SFJ: ?ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory - but only worked without it
#
#spring.datasource.username=zecqyzaxspgrnr
#spring.datasource.password=854a73d7191690a8b27461a0be85eb0add0ffef8e36b5d5db175813f755b6592
#spring.datasource.driverClassName=org.postgresql.Driver
#
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
## create   create-drop   update   validate   - 1st: create then update for check  - update = update if necessary - validate = check but do not modify - create-drop = at the end delete (like H2)
#spring.jpa.hibernate.ddl-auto=create-drop
## aut. create table when insert into ... to execute data.sql on the void DB (as above at H2)
#spring.sql.init.mode=always